{"version":3,"sources":["design/Button.js","design/Nav.js","design/HomePage.js","design/pages/Home.js","design/Frame.js","design/Chart.js","API_Test/API/API_issLoc.js","design/DashPage.js","design/pages/Dashboard.js","design/Card.js","design/ApiPage.js","design/pages/Api.js","App.js","serviceWorker.js","index.js"],"names":["STYLES","SIZES","Button","children","type","onClick","buttonStyle","buttonSize","checkButtonStyle","includes","checkButtonSize","className","Navbar","useState","click","setClick","button","setButton","closeMobileMenu","showButton","window","innerWidth","useEffect","addEventListener","to","src","alt","HomePage","autoPlay","loop","muted","Home","Frame","props","path","label","text","content1","content2","data","name","uv","pv","amt","App","LineChart","width","height","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Legend","Line","stroke","activeDot","r","API_issLoc","state","post","fetch","then","response","json","result","setState","this","latitude","longitude","Component","DashPage","Dashboard","Card","ApiPage","Api","exact","element","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2e2e479e.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Button.css';\r\n\r\n//tableau de style de bouton par defaut\r\nconst STYLES = ['btn--primary', 'btn--outline'];\r\n\r\n//tableau de taille de bouton par defaut\r\nconst SIZES = ['btn--medium', 'btn--large'];\r\n\r\n//children est la valeur qu'on veut passer au bouton\r\nexport const Button = ({children, type, onClick, buttonStyle, buttonSize}) => {\r\n  //Si le bouton a un style, on lui adresse, sinon on lui assigne un style par défaut\r\n  const checkButtonStyle = STYLES.includes(buttonStyle) ? buttonStyle : STYLES[0];\r\n\r\n  //Si le bouton a une taille particuliere, on la lui met, sinon on lui assigne une taille par défaut\r\n  const checkButtonSize = SIZES.includes(buttonSize) ? buttonSize : SIZES[0];\r\n\r\n  //Création du bouton par defaut avec children qui prend un objet a afficher à l'interieur du bouton\r\n  return (\r\n    <button className={`btn ${checkButtonStyle} ${checkButtonSize}`} onClick={onClick} type={type}>\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Button } from './Button';\r\nimport { Link } from 'react-router-dom';\r\nimport './Nav.css';\r\n\r\nfunction Navbar() {\r\n  //Récupere le statut du bouton\r\n  const [click, setClick] = useState(false);\r\n  const [button, setButton] = useState(true);\r\n\r\n  //Décide de l'action à effectuer lorsqu'on ouvre ou ferme le menu déroulant\r\n  const handleClick = () => setClick(!click);\r\n  const closeMobileMenu = () => setClick(false);\r\n\r\n  //Différenciation de l'affichage petit/grand écran (on affiche les boutons lorsque l'afficge est supérieur a 960p)\r\n  const showButton = () => {\r\n    if (window.innerWidth <= 960) {\r\n      setButton(false);\r\n    } else {\r\n      setButton(true);\r\n    }\r\n  };\r\n\r\n  //Utilisation de la biblioteque React pour afficher ou non les boutons\r\n  useEffect(() => { showButton(); }, []);\r\n\r\n  //Appelle showbutton a chaque fois que la fenetre est resize\r\n  window.addEventListener('resize', showButton);\r\n\r\n  return (\r\n      <nav className='navbar'>\r\n        <div className='navbar-container'>\r\n          {// Retour Home + fermeture du menu déroulant (si il existe)\r\n          }\r\n          <Link to='/' className='navbar-logo' onClick={closeMobileMenu}>\r\n            <img className='navbar-img' src='/pictures/galaxy.png' alt='Galaxapi Logo'/>\r\n            GALAXAPI\r\n          </Link>\r\n\r\n          {//Utilisation de la bibliotheque font awesome pour créer les bars et la croix\r\n          }\r\n          <div className='menu-icon' onClick={handleClick}>\r\n            {//Alterne entre les barres et la croix lorque l'on click dessus\r\n            }\r\n            <i className={click ? 'fas fa-times' : 'fas fa-bars'} />\r\n          </div>\r\n\r\n          {//Lorsque le menu deroulant est actif, on affiche les boutons en liste. Sinon on affiche le menu\r\n          }\r\n          <ul className={click ? 'nav-menu active' : 'nav-menu'}>\r\n            <li className='nav-item'>\r\n              <Link to='/' className='nav-links' onClick={closeMobileMenu}>\r\n                Home\r\n              </Link>\r\n            </li>\r\n            <li className='nav-item'>\r\n              <Link to='/dashboard' className='nav-links' onClick={closeMobileMenu}>\r\n                Dashboard\r\n              </Link>\r\n            </li>\r\n            \r\n            {//Affichage uniquement sur petit écrans (lorqu'on ouvre le menu)\r\n            }\r\n            <li>\r\n              <Link to='/Api' className='nav-links-mobile' onClick={closeMobileMenu}>\r\n                Api\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n          \r\n          {//On assigne \"API\" au button par defaut grace à la balise children ainsi qu'un style de bouton\r\n          }\r\n          <Link to='/Api' onClick={closeMobileMenu}>\r\n            {button && <Button buttonStyle='btn--outline'>API</Button>}\r\n          </Link>\r\n        </div>\r\n      </nav>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\nimport '../App.css';\r\nimport './HomePage.css';\r\n\r\nfunction HomePage() {\r\n  return (\r\n    //creation de la banniere d'acceuil en \"hero\" (image/video en plein ecran avec texte)\r\n    <div className='hero-container'>\r\n      <video src='/pictures/video.mp4' autoPlay loop muted />\r\n      <h1>GALAXAPI</h1>\r\n      <p>Arthur Gil - Callixte Fusier</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n","import '../../App.css';\r\nimport HomePage from '../HomePage';\r\nimport React from 'react';\r\n\r\nfunction Home() {\r\n    return (\r\n        <>\r\n            <HomePage />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Frame(props) {\r\n  return (\r\n    //Création de la carte par défaut avec un lien vers une route, une catégorie, une image et du texte\r\n    <>\r\n      <li className='frame-item'>\r\n        <Link className='frame-box' to={props.path}>\r\n            <figure className='frame-date' data-category={props.label}>\r\n                <img className='frame-img' alt='Frame' src={props.src}/>\r\n            </figure>\r\n            <div className='frame-info'>\r\n                <h5 className='frame-text'>{props.text}</h5>\r\n                <br/>\r\n                <h7 className='frame-text'>{props.content1}</h7>\r\n                <br/>\r\n                <h7 className='frame-text'>{props.content2}</h7>\r\n            </div>\r\n        </Link>\r\n      </li>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Frame;\r\n\r\n","import React from \"react\";\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend\r\n} from \"recharts\";\r\n\r\nconst data = [\r\n  {\r\n    name: \"Page A\",\r\n    uv: 4000,\r\n    pv: 2400,\r\n    amt: 2400\r\n  },\r\n  {\r\n    name: \"Page B\",\r\n    uv: 3000,\r\n    pv: 1398,\r\n    amt: 2210\r\n  },\r\n  {\r\n    name: \"Page C\",\r\n    uv: 2000,\r\n    pv: 9800,\r\n    amt: 2290\r\n  },\r\n  {\r\n    name: \"Page D\",\r\n    uv: 2780,\r\n    pv: 3908,\r\n    amt: 2000\r\n  },\r\n  {\r\n    name: \"Page E\",\r\n    uv: 1890,\r\n    pv: 4800,\r\n    amt: 2181\r\n  },\r\n  {\r\n    name: \"Page F\",\r\n    uv: 2390,\r\n    pv: 3800,\r\n    amt: 2500\r\n  },\r\n  {\r\n    name: \"Page G\",\r\n    uv: 3490,\r\n    pv: 4300,\r\n    amt: 2100\r\n  }\r\n];\r\n\r\nexport default function App() {\r\n  return (\r\n    <LineChart\r\n      width={500}\r\n      height={300}\r\n      data={data}\r\n      margin={{\r\n        top: 5,\r\n        right: 30,\r\n        left: 20,\r\n        bottom: 5\r\n      }}\r\n    >\r\n      <CartesianGrid strokeDasharray=\"3 3\" />\r\n      <XAxis dataKey=\"name\" />\r\n      <YAxis />\r\n      <Tooltip />\r\n      <Legend />\r\n      <Line\r\n        type=\"monotone\"\r\n        dataKey=\"pv\"\r\n        stroke=\"#8884d8\"\r\n        activeDot={{ r: 8 }}\r\n      />\r\n      <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#82ca9d\" />\r\n    </LineChart>\r\n  );\r\n}\r\n","// API : https://wheretheiss.at/w/developer\r\nimport React, { Component } from 'react';\r\nimport Frame from '../../design/Frame.js';\r\n\r\n// Url API \r\nconst API_URL1 = \"https://api.wheretheiss.at/v1/satellites/25544\" ;\r\n\r\nclass API_issLoc extends Component {\r\n    state = {\r\n        post: {}\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(API_URL1).then((response) => {\r\n            response = response.json();\r\n            response.then((result) => {\r\n                this.setState({post: result});\r\n            })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Frame src='/pictures/7046.jpg' text='Donées ISS en temps réel' content1={\"Latitude: \" + this.state.post.latitude} content2={\"Longitude: \" + this.state.post.longitude} label='wheretheiss.at' path='/dashboard'/>\r\n        );\r\n    }\r\n}\r\n\r\nexport default API_issLoc;\r\n","import React from 'react';\r\nimport './DashPage.css';\r\nimport Frame from './Frame';\r\nimport Chart from './Chart';\r\nimport API_issLoc from '../API_Test/API/API_issLoc';\r\n\r\nfunction DashPage() {\r\n  return (\r\n    //Affichage des frames avec leurs parametres\r\n    <div className='dash'>\r\n      <div className='dash-container'>\r\n        <div className='dash-wrapper'>\r\n          <ul className='dash-items'>\r\n            <API_issLoc/>\r\n            <Frame src='/pictures/39620.jpg' text='Pics from space' label='ASTRO DIGITAL' path='/dashboard'/>\r\n            <Frame src='/pictures/19608.jpg' text='Near-Earth Comets ans Asteroids' label='NASA' path='/dashboard'/>\r\n          </ul>\r\n          <ul className='dash-items'>\r\n            <Frame src='/pictures/sun3.png' text='Ipgeolocation Astronomy - SunCalc' label='INFO SPACE' path='/dashboard'/>\r\n            <Frame src='/pictures/moon3.jpg' text='Ipgeolocation Astronomy - MoonCalc' label='INFO SPACE' path='/dashboard'/>\r\n          </ul>\r\n          <ul className='dash-chart'>\r\n            <Chart />\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DashPage;","import '../../App.css';\r\nimport React from 'react';\r\nimport DashPage from '../DashPage';\r\n\r\nfunction Dashboard() {\r\n    return (\r\n        <>\r\n            <DashPage />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Dashboard;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Card(props) {\r\n  return (\r\n    //Création de la carte par défaut avec un lien vers une route, une catégorie, une image et du texte\r\n    <>\r\n      <li className='card-item'>\r\n        <Link className='card-link' to={props.path}>\r\n            <figure className='card-category' data-category={props.label}>\r\n                <img className='card-img' alt='Card' src={props.src}/>\r\n            </figure>\r\n            <div className='card-info'>\r\n                <h5 className='card-text'>{props.text}</h5>\r\n            </div>\r\n        </Link>\r\n      </li>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport './ApiPage.css';\r\nimport Card from './Card';\r\n//import ApiRest from '../../../backend/ApiRest';\r\n\r\nfunction ApiPage() {\r\n  return (\r\n    //Affichage des cartes avec leurs parametres\r\n    <div className='api'>\r\n        <div className='api-container'>\r\n            <div className='api-wrapper'>\r\n                <ul className='api-items'>\r\n                    <Card src='/pictures/7046.jpg' text='People in space right now' label='NATRONICS' path='/api'/>\r\n                    <Card src='/pictures/39617.jpg' text='Pics from space' label='ASTRO DIGITAL' path='/api'/>\r\n                </ul>\r\n                <ul className='api-items'>\r\n                    <Card src='/pictures/19608.jpg' text='Near-Earth Comets,  info comète' label='NASA' path='/api'/>\r\n                    <Card src='/pictures/39619.jpg' text='Asteroid NEO..., info asteroides' label='NASA' path='/api'/>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ApiPage;\r\n\r\n","import '../../App.css';\r\nimport React from 'react';\r\nimport ApiPage from '../ApiPage';\r\n\r\nfunction Api() {\r\n    return (\r\n        <>\r\n            <ApiPage />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Api;","import React from 'react';\r\nimport './App.css';\r\nimport Nav from './design/Nav.js';\r\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\r\nimport Home from './design/pages/Home';\r\nimport Dashboard from './design/pages/Dashboard';\r\nimport Api from './design/pages/Api';\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Router>\r\n        <Nav/>\r\n        <Routes>\r\n          <Route exact path='/' element={<Home/>}/>\r\n          <Route exact path='/dashboard' element={<Dashboard/>}/>\r\n          <Route exact path='/Api' element={<Api/>}/>\r\n        </Routes>\r\n      </Router>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}